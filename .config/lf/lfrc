set ratios 1:2:3
# Basic Settings
set cleaner '~/.config/lf/cleaner' # Clear preview
set previewer '~/.config/lf/preview'
set preview true
set hidden true
set drawbox true
set icons true
set incsearch true
set scrolloff 10
set shell 'bash'
set tabstop 4
set dupfilefmt '%b.%n%e'

# Custom Functions
cmd open ${{
	case $(file --mime-type "$f" -bL) in
		text/*|application/json|inode/x-empty) $EDITOR "$f";;
		application/pdf) eat zathura "$f";;
		image/svg) eat pix "$f";;
		image/x-xcf) eat gimp "$f";;
		image/*) eat sxiv "$f";;
		*) xdg-open "$f" ;;
	esac
}}

cmd mkdir %echo 'Directory Name: '; read ans; mkdir $ans

cmd mkfile %echo 'File Name: '; read ans; touch $ans

cmd chmod ${{
	printf "Mode Bits: "
	read ans
	for file in "$fx"; do
		chmod $ans $file
	done

	lf -remote 'send reload'
}}

cmd doasmkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd setwallpaper %xwallpaper --zoom "$f"

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd dragon %dragon -a -x $fx
cmd dragon-stay %dragon -a $fx
cmd dragon-individual %dragon $fx
cmd dlfile %dlfile

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar.zst) unzstd "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *.rar) unrar x "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    [ "$files" = "$file" ] && files='' || files="${files#*;}"
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

cmd stripspace %stripspace "$f"

# Bindings
# Remove some defaults
# map m
# map o
map n
map "'"
map '"'
map d
map c
map e
map f
map t

# File Openers
map ee $$EDITOR "$f"
map u $view "$f"

# Archive Mappings
map au unarchive

# Trash Mappings
# map dd trash
# map tc clear_trash
# map tr restore_trash

# Broot Mapping
# map fj broot_jump
# map fz fzf_jump

# Dragon Mapping
map dr dragon
map ds dragon-stay
map di dragon-individual
map dm mvdragon
map dc cpdragon
map dl dlfile

# view in
map fi %sxiv -t .

# Basic Functions
map . set hidden!
map dd delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr doasmkfile
map md mkdir
map ms $mkscript
map ch chmod
map bg setwallpaper
# map o open_config
# map br $vimv $fx
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect


# file operations
map fee $$EDITOR "$f"
map fau unarchive
map fd{i,r,s} dragon~
map ffi %sxiv -t .
map f. set hidden!
map fdd delete
map fp paste
map fx cut
map fy copy
map fmf mkfile
map fmr doasmkfile
map fmd mkdir
map fms $mkscript
map fch chmod
map fbg setwallpaper
map fr rename
map fC clear
map fU unselect
