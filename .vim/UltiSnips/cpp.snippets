### input ###
snippet tin "" b
int ${1:n};
cin >> $1;
$0
endsnippet

snippet tins "" b
string ${1:s};
cin >> $1;
$0
endsnippet

snippet tinv "" b
vector<int> ${1:vec}(${2:n});
for (int& e : $1)
	cin >> e;
$0
endsnippet

snippet tinstd "" b
int ${1:n};
cin >> $1;
vector<int> ${2:vec}($1);
for (int& e : $2)
	cin >> e;
$0
endsnippet
### input end ###

### data types ###
snippet vec "vector<int>" b
vector<int> ${1:vec}
endsnippet
### data types end ###

### cout, cin, endl ###
snippet cout "cout << ..." b
cout << ${0:...}
endsnippet

snippet coutn "cout << ... << endl;" b
cout << ${1:...} << endl;
endsnippet

snippet cin "cin >> ..."
cin >> ${0:...};
endsnippet

snippet el "<< endl" i
<< endl;
$0
endsnippet
### cout, cin, endl end ###

### if-else ###
snippet if "if (condition)" b
if (${1:condition})$0
endsnippet

snippet ife "if (condition) ...; else ..." b
if (${1:condition})
	${2:...};
else
	${3:...};
$0
endsnippet

snippet ifb "if (condition) ...; else (condition) ..." b
if (${1:condition}) {
	${2:...};
} else {
	${0:...};
}
endsnippet

snippet ifeb "if (condition) ...; else (condition) ..." b
if (${1:condition}) {
	${2:...};
} else {
	${0:...};
}
endsnippet
### if-else end ###

### loops ###
snippet wh "while (condition) ...;"
while (${1:condition})
	${0:...}
endsnippet

snippet whb "while (condition) { ... }"
while (${1:condition}) {
	${0:...}
}
endsnippet

snippet do "do ... while (condition)"
do {
	${1:...}
} while (${2:condition})
$0
endsnippet

snippet for "for (condition) ..."
for (int ${1:i} = 0; $1 < ${2:n}; ++$1)$0
endsnippet

snippet forc "for (condition) ..."
for (int ${1:i} = ${2:0}; $1 ${3:<} ${4:n}; ++$1)$0
endsnippet

snippet fore "for (condition) ..."
for (int$1 ${2:e} : ${3:vec})$0
endsnippet
### loops end ###

### functions ###
snippet cmain "int main() { ... }"
int main(int argc, char* argv[]) {
	$0
	return 0;
}
endsnippet
snippet func "int func() { ... }"
${1:int} ${2:myfunc}(${3:int} ${4:arg}) {
	$0
}
endsnippet
### func end ###
